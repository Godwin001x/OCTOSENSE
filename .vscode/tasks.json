{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Sync: commit & push",
			"type": "shell",
			"command": "bash",
			"args": [
				"-lc",
				"chmod +x scripts/auto-commit.sh && scripts/auto-commit.sh 'chore: workspace sync'"
			],
			"problemMatcher": []
		},
		{
			"label": "probe-servers",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"bash scripts/probe_servers.sh"
			]
		},
		{
			"label": "probe-servers-full",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"bash scripts/probe_servers_full.sh"
			]
		},
		{
			"label": "probe-servers-full",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"bash scripts/probe_servers_full.sh"
			],
			"isBackground": false,
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "probe-servers",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"bash scripts/probe_servers.sh"
			],
			"isBackground": false,
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "probe-servers-full",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"bash scripts/probe_servers_full.sh"
			],
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "backend: start",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"cd server && python3 -m venv venv && source venv/bin/activate && PORT=${PORT:-5050} python app.py"
			],
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "backend: stop",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"lsof -ti :5050 | xargs -r kill -9 || true"
			],
			"problemMatcher": []
		},
		{
			"label": "frontend: start",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"cd client && npm run -s dev"
			],
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "frontend: stop",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"lsof -ti :3000 | xargs -r kill -9 || true"
			],
			"problemMatcher": []
		},
		{
			"label": "open: frontend",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"if [ -f client/.env.local ]; then export $(grep -v '^#' client/.env.local | xargs); fi; URL=${URL:-http://localhost:3000}; BACKEND=${NEXT_PUBLIC_API_URL:-http://127.0.0.1:5050}; for i in {1..60}; do (curl -sSf \"$BACKEND/health\" >/dev/null 2>&1) && (curl -sSf \"$URL\" >/dev/null 2>&1) && break; sleep 1; done; open \"$URL\""
			],
			"problemMatcher": []
		},
		{
			"label": "dev: start all",
			"dependsOn": [
				"backend: start",
				"frontend: start",
				"open: frontend"
			],
			"dependsOrder": "parallel"
		},
		{
			"label": "dev: start all",
			"type": "shell",
			"command": "/bin/zsh",
			"args": [
				"-lc",
				"echo boot"
			],
			"isBackground": false,
			"problemMatcher": []
		}
	]
}